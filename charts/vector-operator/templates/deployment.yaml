apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
    control-plane: controller-manager
    app.kubernetes.io/name: vector-operator
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  selector:
    matchLabels:
      control-plane: controller-manager
      app.kubernetes.io/name: vector-operator
      app.kubernetes.io/instance: {{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
        app.kubernetes.io/name: vector-operator
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: manager
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /manager
        args:
        {{- if .Values.leaderElection.enabled }}
        - --leader-elect
        {{- end }}
        - --health-probe-bind-address=:8081
        {{- if .Values.metrics.enabled }}
        - --metrics-bind-address=:8443
        {{- end }}
        {{- if .Values.webhook.enabled }}
        - --webhook-port={{ .Values.webhook.port }}
        - --webhook-cert-dir={{ .Values.webhook.certDir }}
        {{- end }}
        - --zap-log-level={{ .Values.logLevel }}
        ports:
        - containerPort: 8081
          name: healthz
          protocol: TCP
        {{- if .Values.metrics.enabled }}
        - containerPort: 8443
          name: metrics
          protocol: TCP
        {{- end }}
        {{- if .Values.webhook.enabled }}
        - containerPort: {{ .Values.webhook.port }}
          name: webhook
          protocol: TCP
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: healthz
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: healthz
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.webhook.enabled }}
        volumeMounts:
        - mountPath: {{ .Values.webhook.certDir }}
          name: cert
          readOnly: true
        {{- end }}
      serviceAccountName: {{ include "vector-operator.serviceAccountName" . }}
      terminationGracePeriodSeconds: 10
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.webhook.enabled }}
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: {{ .Release.Name }}-webhook-server-cert
      {{- end }}
